
Given a list of non-negative integers nums, arrange them such that they form the largest number and return it.

Since the result may be very large, so you need to return a string instead of an integer.

 

Example 1:

Input: nums = [10,2]
Output: "210"
Example 2:

Input: nums = [3,30,34,5,9]
Output: "9534330"
 

Constraints:

1 <= nums.length <= 100
0 <= nums[i] <= 109

code-----
#include <vector>
#include <string>
#include <algorithm>

class Solution {
public:
    string largestNumber(vector<int>& nums) {
        // Convert all integers to strings
        vector<string> strNums;
        for (int num : nums) {
            strNums.push_back(to_string(num));
        }

        // Custom comparator for sorting
        sort(strNums.begin(), strNums.end(), [](const string &a, const string &b) {
            return a + b > b + a; // Compare concatenated results
        });

        // Handle case where the largest number is 0
        if (strNums[0] == "0") {
            return "0";
        }

        // Concatenate sorted strings to form the largest number
        string largestNum;
        for (const string &str : strNums) {
            largestNum += str;
        }

        return largestNum;
    }
};
