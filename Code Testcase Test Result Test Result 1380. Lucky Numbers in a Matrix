Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.

A lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.

 

Example 1:

Input: matrix = [[3,7,8],[9,11,13],[15,16,17]]
Output: [15]
Explanation: 15 is the only lucky number since it is the minimum in its row and the maximum in its column.
Example 2:

Input: matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]
Output: [12]
Explanation: 12 is the only lucky number since it is the minimum in its row and the maximum in its column.
Example 3:

Input: matrix = [[7,8],[1,2]]
Output: [7]
Explanation: 7 is the only lucky number since it is the minimum in its row and the maximum in its column.
 

Constraints:

m == mat.length
n == mat[i].length
1 <= n, m <= 50
1 <= matrix[i][j] <= 105.
All elements in the matrix are distinct.


code--- 
class Solution {
public:
    vector<int> luckyNumbers (vector<vector<int>>& matrix) {
        vector<int> result;  // To store the lucky numbers
        
        // Iterate over each row
        for (int i = 0; i < matrix.size(); i++) {
            // Find the minimum element in the current row
            int minElement = matrix[i][0];
            int minIndex = 0;  // Track the column index of the minimum element
            for (int j = 1; j < matrix[i].size(); j++) {
                if (matrix[i][j] < minElement) {
                    minElement = matrix[i][j];
                    minIndex = j;
                }
            }
            
            // Now check if this minimum element is the maximum in its column
            bool isMaxInColumn = true;
            for (int k = 0; k < matrix.size(); k++) {
                if (matrix[k][minIndex] > minElement) {
                    isMaxInColumn = false;
                    break;
                }
            }
            
            // If it is the maximum in its column, it is a lucky number
            if (isMaxInColumn) {
                result.push_back(minElement);
            }
        }
        
        return result;  // Return the list of lucky numbers
    }
};
