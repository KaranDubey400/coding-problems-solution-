ou are given two integers n and x. You have to construct an array of positive integers nums of size n where for every 0 <= i < n - 1, nums[i + 1] is greater than nums[i], and the result of the bitwise AND operation between all elements of nums is x.

Return the minimum possible value of nums[n - 1].

 

Example 1:

Input: n = 3, x = 4

Output: 6

Explanation:

nums can be [4,5,6] and its last element is 6.

Example 2:

Input: n = 2, x = 7

Output: 15

Explanation:

nums can be [7,15] and its last element is 15.

 

Constraints:

1 <= n, x <= 108

code----
class Solution {
public:
    long long minEnd(int n, int x) {
        long long current = x; // Start with x
        long long result = x; // Initialize the last number
        int addedNumbers = 1; // Count of numbers added so far

        // Iterate over powers of 2 (bit positions)
        for (int i = 0; addedNumbers < n; ++i) {
            long long next = current | (1LL << i); // Add unique bits
            if (next > current) { // Ensure strictly increasing sequence
                current = next;
                result = next;
                addedNumbers++;
            }
        }

        return result;
    }
};
