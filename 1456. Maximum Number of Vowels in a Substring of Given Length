
Medium
Topics

Hint
Given a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k.

Vowel letters in English are 'a', 'e', 'i', 'o', and 'u'.



Example 1:

Input: s = "abciiidef", k = 3
Output: 3
Explanation: The substring "iii" contains 3 vowel letters.
Example 2:

Input: s = "aeiou", k = 2
Output: 2
Explanation: Any substring of length 2 contains 2 vowels.
Example 3:

Input: s = "leetcode", k = 3
Output: 2
Explanation: "lee", "eet" and "ode" contain 2 vowels.
 

Constraints:

1 <= s.length <= 105
s consists of lowercase English letters.
1 <= k <= s.length

code---

#include <iostream>
#include <string>
#include <unordered_set>
using namespace std;

bool isVowel(char ch) {
    return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u';
}

int maxVowels(string s, int k) {
    int maxVowelCount = 0;
    int currentVowelCount = 0;

    // Step 1: Count vowels in the first window of size k
    for (int i = 0; i < k; ++i) {
        if (isVowel(s[i])) {
            currentVowelCount++;
        }
    }
    
    maxVowelCount = currentVowelCount;

    // Step 2: Slide the window, one character at a time
    for (int i = k; i < s.length(); ++i) {
        if (isVowel(s[i])) {
            currentVowelCount++;
        }
        if (isVowel(s[i - k])) {
            currentVowelCount--;
        }
        maxVowelCount = max(maxVowelCount, currentVowelCount);
    }

    return maxVowelCount;
}

int main() {
    string s = "abciiidef";
    int k = 3;
    cout << "Maximum number of vowels in any substring of length " << k << ": " << maxVowels(s, k) << endl;

    return 0;
}

